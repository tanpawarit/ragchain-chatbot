from src.components.ragchain_runner import RAGChainRunner
from src.utils.config.app_config import AppConfig
from src.utils.pipeline.mlflow_tracker import MLflowTracker
from src.utils.pipeline.vectorstore_manager import load_vectorstore


def main() -> None:
    cfg = AppConfig.from_files("configs/model_config.yaml", "config.yaml")

    # ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    user_id = input("üë§ User ID (‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≤‡∏°): ")

    with MLflowTracker(run_name="rag_run") as tracker:
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        if user_id:
            tracker.log_params({"user_id": user_id})

        # Load the vectorstore first
        vectorstore = load_vectorstore(
            cfg, data_version="latest", mlflow_tracker=tracker
        )

        rag = RAGChainRunner(cfg, mlflow_tracker=tracker, vectorstore=vectorstore)
        question = input("üí¨ Question: ")
        print("üß† Thinking...")
        answer = rag.answer(question, user_id=user_id if user_id else None)
        print("ü§ñ", answer)


if __name__ == "__main__":  # pragma: no cover
    main()
